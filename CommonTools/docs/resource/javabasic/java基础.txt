1.JVM内存结构:主要有三大块
   堆内存(Heap):Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。用于存放对象的实例，几乎所有的对象实例都在这里分配内存，是GC管理的主要区域。
      年轻代(Young Generation) ：(默认8:1:1)
         Eden空间 : 新建（New）或者短期的对象存放在Eden区域
	 From Survivor空间,To Survivor空间: 幸存的或者中期的对象将会从Eden区域拷贝到Survivor区域
	 
      老年代(Old Generation)：始终存在或者长期的对象将会从Survivor拷贝到Old Generation,gc回收可能性大的区域。
      
   方法区(Method Area): 它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。
   
   JVM栈(JVM Stack):
       Java虚拟机栈（Java Virtual Machine Stacks）：是线程私有的，它的生命周期与线程相同，它描述的是Java方法执行的内存模型：
                                                    每个方法被执行的时候都会同时创建一个栈帧（Stack Frame）用于存储局部变量表、操作栈、动态链接、方法出口等信息。
       					   
  						   
   
   程序计数器：一块较小的内存空间，它的作用可以看做是当前线程所执行的字节码的行号指示器，是线程私有的。




2.类加载过程
3.java内存模型(JMM)

